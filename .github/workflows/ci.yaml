name: CI/CD Pipeline

on:
  push:
    branches: [ "main", "master", "feature/devops"]
  workflow_dispatch: {}

env:
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  BACKEND_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/sausage-backend
  FRONTEND_IMAGE_NAME: ${{ secrets.DOCKER_HUB_USERNAME }}/sausage-frontend

jobs:
  test:
    runs-on: ubuntu-22.04
    services:
      db:
        image: oscarfonts/h2:alpine
        ports:
          - "9092:9092"
          - "8082:8082"
        env:
          H2_OPTIONS: -tcp -tcpAllowOthers -tcpPort 9092 -web -webAllowOthers -webPort 8082 -ifNotExists
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
        options: >-
          --health-cmd "curl -f http://localhost:8082/login.jsp || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '16'  
          distribution: 'temurin'

      - name: Run backend tests
        working-directory: ./backend  
        run: mvn test          

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install frontend dependencies
        working-directory: ./frontend
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: |
          npm ci

      - name: Update webdriver dependencies
        working-directory: ./frontend
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "Chrome version: $CHROME_VERSION"
          
          CHROMEDRIVER_VERSION=$(curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%%.*}")
          echo "ChromeDriver version: $CHROMEDRIVER_VERSION"

          npm uninstall webdriver-manager
          npm install webdriver-manager@latest
          npx webdriver-manager clean
          npx webdriver-manager update --versions.chrome=$CHROMEDRIVER_VERSION

      - name: Run e2e tests
        working-directory: ./frontend
        env:
          NODE_OPTIONS: --openssl-legacy-provider
        run: npm run e2e -- --headless
        
  build-and-push:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: |
            ${{ env.BACKEND_IMAGE_NAME }}:latest
            ${{ env.BACKEND_IMAGE_NAME }}:${{ github.sha }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ env.FRONTEND_IMAGE_NAME }}:latest
            ${{ env.FRONTEND_IMAGE_NAME }}:${{ github.sha }}